// <auto-generated />
using System;
using DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Models.AskedQuestionsManagement.AskedQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderBy")
                        .HasColumnType("int");

                    b.Property<string>("Qusetion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("AskedQuestions");
                });

            modelBuilder.Entity("DataLayer.Models.BlogManagement.Article", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CanonicalAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("DataLayer.Models.BlogManagement.ArticleCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CanonicalAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ShowOrder")
                        .HasColumnType("int");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.HasKey("Id");

                    b.ToTable("ArticleCategories");
                });

            modelBuilder.Entity("DataLayer.Models.CertificateManagement.Certificate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("DataLayer.Models.HeaderManagement.SlideHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Heading")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Text")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("SlideHeaders");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Title = "دسترسی به پنل ادمین"
                        },
                        new
                        {
                            Id = 2L,
                            Title = "دسترسی به اسلایدر"
                        },
                        new
                        {
                            Id = 16L,
                            ParentId = 2L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 17L,
                            ParentId = 2L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 18L,
                            ParentId = 2L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 19L,
                            ParentId = 2L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 20L,
                            ParentId = 2L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 3L,
                            Title = "دسترسی به پروژه ها"
                        },
                        new
                        {
                            Id = 21L,
                            ParentId = 3L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 22L,
                            ParentId = 3L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 23L,
                            ParentId = 3L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 24L,
                            ParentId = 3L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 25L,
                            ParentId = 3L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 26L,
                            ParentId = 3L,
                            Title = "ایجاد اسلایدر پروژه"
                        },
                        new
                        {
                            Id = 27L,
                            ParentId = 3L,
                            Title = "ویرایش اسلایدر پروژه "
                        },
                        new
                        {
                            Id = 28L,
                            ParentId = 3L,
                            Title = "حذف اسلایدر پروژه"
                        },
                        new
                        {
                            Id = 29L,
                            ParentId = 3L,
                            Title = "بازگردانی اسلایدر پروژه"
                        },
                        new
                        {
                            Id = 30L,
                            ParentId = 3L,
                            Title = "نمایش اسلایدر پروژه حذف شده ها"
                        },
                        new
                        {
                            Id = 31L,
                            ParentId = 3L,
                            Title = "نمایش اسلایدر پروژه ها"
                        },
                        new
                        {
                            Id = 4L,
                            Title = "دسترسی به اسلایدر"
                        },
                        new
                        {
                            Id = 32L,
                            ParentId = 4L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 33L,
                            ParentId = 4L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 34L,
                            ParentId = 4L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 35L,
                            ParentId = 4L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 36L,
                            ParentId = 4L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 5L,
                            Title = "دسترسی به اخبار"
                        },
                        new
                        {
                            Id = 37L,
                            ParentId = 5L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 38L,
                            ParentId = 5L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 39L,
                            ParentId = 5L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 40L,
                            ParentId = 5L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 41L,
                            ParentId = 5L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 42L,
                            ParentId = 5L,
                            Title = "نمایش اسلایدر خبر"
                        },
                        new
                        {
                            Id = 43L,
                            ParentId = 5L,
                            Title = "ایجاداسلایدر خبر"
                        },
                        new
                        {
                            Id = 44L,
                            ParentId = 5L,
                            Title = "ویرایش اسلایدر خبر"
                        },
                        new
                        {
                            Id = 45L,
                            ParentId = 5L,
                            Title = "حذف اسلایدر خبر"
                        },
                        new
                        {
                            Id = 46L,
                            ParentId = 5L,
                            Title = "بازگردانی اسلایدر خبر"
                        },
                        new
                        {
                            Id = 47L,
                            ParentId = 5L,
                            Title = "نمایش اسلایدر خبر حذف شده ها"
                        },
                        new
                        {
                            Id = 48L,
                            ParentId = 5L,
                            Title = "نمایش ویدیو خبر"
                        },
                        new
                        {
                            Id = 49L,
                            ParentId = 5L,
                            Title = "ایجاد ویدیو خبر"
                        },
                        new
                        {
                            Id = 50L,
                            ParentId = 5L,
                            Title = "ویرایش ویدیو خبر"
                        },
                        new
                        {
                            Id = 51L,
                            ParentId = 5L,
                            Title = "حذف ویدیو خبر"
                        },
                        new
                        {
                            Id = 52L,
                            ParentId = 5L,
                            Title = "بازگردانی ویدیو خبر"
                        },
                        new
                        {
                            Id = 53L,
                            ParentId = 5L,
                            Title = "نمایش ویدیو خبر حذف شده ها"
                        },
                        new
                        {
                            Id = 6L,
                            Title = "دسترسی به افتخارات و گواهینامه ها"
                        },
                        new
                        {
                            Id = 54L,
                            ParentId = 6L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 55L,
                            ParentId = 6L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 56L,
                            ParentId = 6L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 57L,
                            ParentId = 6L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 58L,
                            ParentId = 6L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 7L,
                            Title = "دسترسی به کلیپ ها و پادکست ها"
                        },
                        new
                        {
                            Id = 59L,
                            ParentId = 7L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 60L,
                            ParentId = 7L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 61L,
                            ParentId = 7L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 62L,
                            ParentId = 7L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 63L,
                            ParentId = 7L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 8L,
                            Title = "دسترسی به چارت سازمانی"
                        },
                        new
                        {
                            Id = 64L,
                            ParentId = 8L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 65L,
                            ParentId = 8L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 66L,
                            ParentId = 8L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 67L,
                            ParentId = 8L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 68L,
                            ParentId = 8L,
                            Title = "نمایش حذف شده ها"
                        },
                        new
                        {
                            Id = 9L,
                            Title = "دسترسی به تصویر چارت سازمانی"
                        },
                        new
                        {
                            Id = 69L,
                            ParentId = 9L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 10L,
                            Title = "دسترسی به گروه مقالات"
                        },
                        new
                        {
                            Id = 70L,
                            ParentId = 10L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 71L,
                            ParentId = 10L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 72L,
                            ParentId = 10L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 73L,
                            ParentId = 10L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 11L,
                            Title = "دسترسی به مقالات"
                        },
                        new
                        {
                            Id = 74L,
                            ParentId = 11L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 75L,
                            ParentId = 11L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 76L,
                            ParentId = 11L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 77L,
                            ParentId = 11L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 12L,
                            Title = "دسترسی به کاربران"
                        },
                        new
                        {
                            Id = 78L,
                            ParentId = 12L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 79L,
                            ParentId = 12L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 80L,
                            ParentId = 12L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 81L,
                            ParentId = 12L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 82L,
                            ParentId = 12L,
                            Title = "تغییر کلمه عبور کاربران"
                        },
                        new
                        {
                            Id = 83L,
                            ParentId = 12L,
                            Title = "تعیین سطح کاربر"
                        },
                        new
                        {
                            Id = 13L,
                            Title = "دسترسی به نقش ها"
                        },
                        new
                        {
                            Id = 84L,
                            ParentId = 13L,
                            Title = "ایجاد"
                        },
                        new
                        {
                            Id = 85L,
                            ParentId = 13L,
                            Title = "ویرایش"
                        },
                        new
                        {
                            Id = 86L,
                            ParentId = 13L,
                            Title = "حذف"
                        },
                        new
                        {
                            Id = 87L,
                            ParentId = 13L,
                            Title = "بازگردانی"
                        },
                        new
                        {
                            Id = 88L,
                            ParentId = 13L,
                            Title = "تعیین سطح دسترسی نقش "
                        },
                        new
                        {
                            Id = 14L,
                            Title = "دسترسی به تنظیمات سایت"
                        },
                        new
                        {
                            Id = 89L,
                            ParentId = 14L,
                            Title = "ویرایش تنظیمات سایت"
                        },
                        new
                        {
                            Id = 15L,
                            Title = "دسترسی به درباره ما"
                        },
                        new
                        {
                            Id = 90L,
                            ParentId = 15L,
                            Title = "ویرایش درباره ما"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsDeleted = false,
                            Title = "مدیر"
                        });
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.RolePermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PermissionId = 1L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            PermissionId = 2L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            PermissionId = 16L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            PermissionId = 17L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            PermissionId = 18L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            PermissionId = 19L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            PermissionId = 20L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            PermissionId = 3L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            PermissionId = 21L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            PermissionId = 22L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            PermissionId = 23L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            PermissionId = 24L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            PermissionId = 25L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            PermissionId = 26L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            PermissionId = 27L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 16L,
                            PermissionId = 28L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 17L,
                            PermissionId = 29L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 18L,
                            PermissionId = 30L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 19L,
                            PermissionId = 31L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 20L,
                            PermissionId = 4L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 21L,
                            PermissionId = 32L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 22L,
                            PermissionId = 33L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 23L,
                            PermissionId = 34L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 24L,
                            PermissionId = 35L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 25L,
                            PermissionId = 36L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 26L,
                            PermissionId = 5L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 27L,
                            PermissionId = 37L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 28L,
                            PermissionId = 38L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 29L,
                            PermissionId = 39L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 30L,
                            PermissionId = 40L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 31L,
                            PermissionId = 41L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 32L,
                            PermissionId = 42L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 33L,
                            PermissionId = 43L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 34L,
                            PermissionId = 44L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 35L,
                            PermissionId = 45L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 36L,
                            PermissionId = 46L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 37L,
                            PermissionId = 47L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 38L,
                            PermissionId = 48L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 39L,
                            PermissionId = 49L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 40L,
                            PermissionId = 50L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 41L,
                            PermissionId = 51L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 42L,
                            PermissionId = 52L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 43L,
                            PermissionId = 53L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 44L,
                            PermissionId = 6L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 45L,
                            PermissionId = 54L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 46L,
                            PermissionId = 55L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 47L,
                            PermissionId = 56L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 48L,
                            PermissionId = 57L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 49L,
                            PermissionId = 58L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 50L,
                            PermissionId = 7L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 51L,
                            PermissionId = 59L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 52L,
                            PermissionId = 60L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 53L,
                            PermissionId = 61L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 54L,
                            PermissionId = 62L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 55L,
                            PermissionId = 63L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 56L,
                            PermissionId = 8L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 57L,
                            PermissionId = 64L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 58L,
                            PermissionId = 65L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 59L,
                            PermissionId = 66L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 60L,
                            PermissionId = 67L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 61L,
                            PermissionId = 68L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 62L,
                            PermissionId = 9L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 63L,
                            PermissionId = 69L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 64L,
                            PermissionId = 10L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 65L,
                            PermissionId = 70L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 66L,
                            PermissionId = 71L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 67L,
                            PermissionId = 72L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 68L,
                            PermissionId = 73L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 69L,
                            PermissionId = 11L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 70L,
                            PermissionId = 74L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 71L,
                            PermissionId = 75L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 72L,
                            PermissionId = 76L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 73L,
                            PermissionId = 77L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 74L,
                            PermissionId = 12L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 75L,
                            PermissionId = 78L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 76L,
                            PermissionId = 79L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 77L,
                            PermissionId = 80L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 78L,
                            PermissionId = 81L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 79L,
                            PermissionId = 82L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 80L,
                            PermissionId = 83L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 81L,
                            PermissionId = 13L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 82L,
                            PermissionId = 84L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 83L,
                            PermissionId = 85L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 84L,
                            PermissionId = 86L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 85L,
                            PermissionId = 87L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 86L,
                            PermissionId = 88L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 87L,
                            PermissionId = 14L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 88L,
                            PermissionId = 89L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 89L,
                            PermissionId = 15L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 90L,
                            PermissionId = 90L,
                            RoleId = 1L
                        });
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteerTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Avatar = "/ViewData/Profile/Default.png",
                            DisplayName = "کاربر ادمین",
                            IsDeleted = false,
                            Password = "E1-0A-DC-39-49-BA-59-AB-BE-56-E0-57-F2-0F-88-3E",
                            PhoneNumber = "09128541094",
                            RegisteerTime = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(6098)
                        });
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleId = 1L,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("DataLayer.Models.InformationManagement.ChartDesign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemove")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NameFamily")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SideCompany")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ChartDesigns");
                });

            modelBuilder.Entity("DataLayer.Models.InformationManagement.ChartPicture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChartPictures");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationDate = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(6016),
                            Language = "0",
                            Picture = "",
                            PictureAlt = "",
                            PictureTitle = ""
                        },
                        new
                        {
                            Id = 2L,
                            CreationDate = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(6032),
                            Language = "1",
                            Picture = "",
                            PictureAlt = "",
                            PictureTitle = ""
                        });
                });

            modelBuilder.Entity("DataLayer.Models.InformationManagement.Settings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteKeys")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreationDate = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(6054),
                            Icon = "",
                            Language = "0",
                            Logo = "",
                            LogoAlt = "",
                            LogoTitle = "",
                            SiteDesc = "",
                            SiteKeys = "",
                            SiteName = ""
                        },
                        new
                        {
                            Id = 2L,
                            CreationDate = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(6074),
                            Icon = "",
                            Language = "1",
                            Logo = "",
                            LogoAlt = "",
                            LogoTitle = "",
                            SiteDesc = "",
                            SiteKeys = "",
                            SiteName = ""
                        });
                });

            modelBuilder.Entity("DataLayer.Models.InformationManagement.SiteInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkTelegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkWhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Linkinstagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MissionCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qusetion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("TelNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TimeRun")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VisionCompany")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteInfos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "قم",
                            CreationDate = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(5811),
                            Description = "",
                            Language = "0",
                            LinkLocation = "",
                            MetaDescription = "",
                            MissionCompany = "",
                            Picture = "",
                            PictureAlt = "",
                            PictureTitle = "",
                            Qusetion = "",
                            ShortDescription = "",
                            TelNumber = "",
                            TimeRun = "",
                            VisionCompany = ""
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Qom",
                            CreationDate = new DateTime(2023, 7, 24, 10, 33, 41, 629, DateTimeKind.Local).AddTicks(5993),
                            Description = "",
                            Language = "1",
                            LinkLocation = "",
                            MetaDescription = "",
                            MissionCompany = "",
                            Picture = "",
                            PictureAlt = "",
                            PictureTitle = "",
                            Qusetion = "",
                            ShortDescription = "",
                            TelNumber = "",
                            TimeRun = "",
                            VisionCompany = ""
                        });
                });

            modelBuilder.Entity("DataLayer.Models.InformationManagement.Visit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageVisited")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visits");
                });

            modelBuilder.Entity("DataLayer.Models.NewsManagement.NewsSite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("NewsSites");
                });

            modelBuilder.Entity("DataLayer.Models.NewsManagement.SliderNewsSite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long?>("NewsSiteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsSiteId");

                    b.ToTable("sliderNewsSites");
                });

            modelBuilder.Entity("DataLayer.Models.NewsManagement.VideoNewsSite", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<long?>("NewsSiteId")
                        .HasColumnType("bigint");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsSiteId");

                    b.ToTable("videoNewsSites");
                });

            modelBuilder.Entity("DataLayer.Models.PodcastManagement.Podcast", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Podcasts");
                });

            modelBuilder.Entity("DataLayer.Models.ProjectManagement.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AddressLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberUnit")
                        .HasColumnType("int");

                    b.Property<string>("OwnerProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PresenterProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(600)
                        .HasColumnType("nvarchar(600)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeStructureProject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usefularea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("DataLayer.Models.ProjectManagement.SliderProject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureAlt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProjectId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("SliderProjects");
                });

            modelBuilder.Entity("DataLayer.Models.BlogManagement.Article", b =>
                {
                    b.HasOne("DataLayer.Models.BlogManagement.ArticleCategory", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.Permission", b =>
                {
                    b.HasOne("DataLayer.Models.IdentityManagement.Permission", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.RolePermission", b =>
                {
                    b.HasOne("DataLayer.Models.IdentityManagement.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.IdentityManagement.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.UserRole", b =>
                {
                    b.HasOne("DataLayer.Models.IdentityManagement.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Models.IdentityManagement.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DataLayer.Models.NewsManagement.SliderNewsSite", b =>
                {
                    b.HasOne("DataLayer.Models.NewsManagement.NewsSite", "NewsSite")
                        .WithMany("sliderNewsSites")
                        .HasForeignKey("NewsSiteId");

                    b.Navigation("NewsSite");
                });

            modelBuilder.Entity("DataLayer.Models.NewsManagement.VideoNewsSite", b =>
                {
                    b.HasOne("DataLayer.Models.NewsManagement.NewsSite", "NewsSite")
                        .WithMany("videoNewsSites")
                        .HasForeignKey("NewsSiteId");

                    b.Navigation("NewsSite");
                });

            modelBuilder.Entity("DataLayer.Models.ProjectManagement.SliderProject", b =>
                {
                    b.HasOne("DataLayer.Models.ProjectManagement.Project", "project")
                        .WithMany("sliderProjects")
                        .HasForeignKey("ProjectId");

                    b.Navigation("project");
                });

            modelBuilder.Entity("DataLayer.Models.BlogManagement.ArticleCategory", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DataLayer.Models.IdentityManagement.User", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("DataLayer.Models.NewsManagement.NewsSite", b =>
                {
                    b.Navigation("sliderNewsSites");

                    b.Navigation("videoNewsSites");
                });

            modelBuilder.Entity("DataLayer.Models.ProjectManagement.Project", b =>
                {
                    b.Navigation("sliderProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
